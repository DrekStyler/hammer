rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Function to check if running in emulator mode
    function isEmulator() {
      return request.auth != null &&
        (request.auth.token.firebase.sign_in_attributes.emulator == true ||
         request.resource.data.emulatorMode == true);
    }

    // Function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Allow read and write for testing in emulators
    match /{document=**} {
      allow read, write: if isEmulator() || (isAuthenticated() && request.time < timestamp.date(2025, 12, 31));
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Projects collection
    match /projects/{projectId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();

      // Project invites subcollection
      match /invites/{inviteId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated();
      }
    }

    // Subcontractors collection
    match /subcontractors/{subId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Skills/trades collection - read by any authenticated user, write by admins
    match /skills/{skillId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
}